<project name="MavenDS" basedir="." default="-compile">
	<description>MavenDS: An Analysis Framework for the Maven Repository.${line.separator}Targets begining with '-' are executed internally by other targets.${line.separator}To fetch the Nexus Index and Maven Artifacts, *aria2* is used.${line.separator}Check http://aria2.sourceforge.net/ for more details on how to install *aria2*.${line.separator}Some targets require a configuration.${line.separator}Prepend the configuration target before the goal target, e.g., *ant conf-ch urilist*.</description>
	<property name="src" location="src" />
	<property name="sql" location="sql" />
	<property name="lib" location="lib" />
	<property name="build" location="build" />
	<property name="cache" location="cache" />
	<property name="out" location="out" />
	<property name="mirror.1" value="http://mirrors.ibiblio.org/maven2" />
	<property name="mirror.2" value="http://maven.antelink.com/content/repositories/central" />
	<property name="mirror.3" value="http://repo.jfrog.org/artifactory/simple/libs-release-bintray" />
	<property name="nexusindexgz.url" value="${mirror.1}/.index/nexus-maven-repository-index.gz" />
	<property name="nexusindexgz.path" location="${cache}/nexus-maven-repository-index.gz" />
	<property name="nexusindex.path" location="${cache}/nexus-maven-repository-index" />
	<property name="mavenindex.path" location="${out}/mavenindex.sqlite3" />
	<property name="repo" location="${cache}/repo" />
	<path id="lib">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
	</path>
	<macrodef name="setup">
		<attribute name="conf" />
		<attribute name="where" />
		<sequential>
			<property name="select.query" value="select * from artifact_jar where @{where}" />
			<property name="urilist.path" location="${out}/uri-@{conf}.list" />
			<property name="sessionlist.path" location="${out}/session-@{conf}.list" />
			<property name="mavenpom.path" location="${out}/mavenpom-@{conf}.sqlite3" />
			<property name="maveninode.path" location="${out}/maveninode-@{conf}.sqlite3" />
		</sequential>
	</macrodef>
	<macrodef name="db">
		<attribute name="file" />
		<attribute name="sql" />
		<sequential>
			<echo message="Executing @{sql} on @{file}" />
			<delete file="@{file}" />
			<exec executable="sqlite3" input="@{sql}">
				<arg value="-bail" />
				<arg value="@{file}" />
			</exec>
		</sequential>
	</macrodef>
	<macrodef name="analysis">
		<attribute name="mavenvisitor" />
		<sequential>
			<java classname="ch.usi.inf.mavends.analysis.Main" classpath="${build}">
				<classpath refid="lib" />
				<arg value="--mavenindex=${mavenindex.path}" />
				<arg value="--repo=${repo}" />
				<arg value="--query=${select.query}" />
				<arg value="--mavenvisitor=ch.usi.inf.mavends.analysis.visitors.@{mavenvisitor}" />
			</java>
		</sequential>
	</macrodef>
	<target name="conf-ch" description="Configuration using artifacts from the 'ch' root group (~500MB).">
		<setup conf="ch" where="rootgroup = 'ch'" />
	</target>
	<target name="conf-net" description="Configuration using artifacts from the 'net' root group (~16GB).">
		<setup conf="net" where="rootgroup = 'net'" />
	</target>
	<target name="conf-com" description="Configuration using artifacts from the 'com' root group (~58GB).">
		<setup conf="com" where="rootgroup = 'com'" />
	</target>
	<target name="conf-all" description="Configuration using --all-- artifacts. (~254GB).">
		<setup conf="all" where="1" />
	</target>
	<target name="-compile" description="Compiles all Java files under the src/ directory.">
		<mkdir dir="${build}" />
		<javac includeantruntime="false" srcdir="${src}" destdir="${build}" debug="true">
			<classpath refid="lib" />
		</javac>
	</target>
	<target name="nexusindex" description="Fetches and uncompresses the Nexus Maven Repository Index.">
		<mkdir dir="${cache}" />
		<exec executable="aria2c">
			<arg value="--dir=/" />
			<arg value="--max-concurrent-downloads=16" />
			<arg value="--auto-file-renaming=false" />
			<arg value="--conditional-get=true" />
			<arg value="--allow-overwrite=true" />
			<arg value="--file-allocation=falloc" />
			<arg value="--out=${nexusindexgz.path}" />
			<arg value="${nexusindexgz.url}" />
		</exec>
		<gunzip src="${nexusindexgz.path}" dest="${nexusindex.path}" />
	</target>
	<target name="mavenindex" depends="-compile" description="Creates and populates the Maven Index DB from the Nexus Index.">
		<mkdir dir="${out}" />
		<db file="${mavenindex.path}" sql="${sql}/mavenindex.sql" />
		<java classname="ch.usi.inf.mavends.index.Main" classpath="${build}">
			<classpath refid="lib" />
			<arg value="--nexusindex=${nexusindex.path}" />
			<arg value="--mavenindex=${mavenindex.path}" />
		</java>
	</target>
	<target name="urilist" depends="-compile" description="Builds the list of artifacts to download. Requires configuration." if="select.query">
		<java classname="ch.usi.inf.mavends.uri.Main" classpath="${build}">
			<classpath refid="lib" />
			<arg value="--mavenindex=${mavenindex.path}" />
			<arg value="--urilist=${urilist.path}" />
			<arg value="--query=${select.query}" />
			<arg value="--mirrors=${mirror.1},${mirror.2},${mirror.3}" />
		</java>
	</target>
	<target name="fetcharts" description="Fetches all artifacts specified by the URI list. Requires configuration." if="select.query">
		<exec executable="aria2c">
			<arg value="--dir=${repo}" />
			<arg value="--max-concurrent-downloads=16" />
			<arg value="--auto-file-renaming=false" />
			<arg value="--conditional-get=true" />
			<arg value="--allow-overwrite=true" />
			<arg value="--input-file=${urilist.path}" />
			<arg value="--save-session=${sessionlist.path}" />
			<arg value="--deferred-input=true" />
		</exec>
	</target>
	<target name="mavenpom" depends="-compile" description="Extract the information from POM files. Requires configuration." if="select.query">
		<db file="${mavenpom.path}" sql="${sql}/mavenpom.sql" />
		<java classname="ch.usi.inf.mavends.pom.Main" classpath="${build}">
			<classpath refid="lib" />
			<arg value="--mavenindex=${mavenindex.path}" />
			<arg value="--repo=${repo}" />
			<arg value="--query=${select.query}" />
			<arg value="--mavenpom=${mavenpom.path}" />
		</java>
	</target>
	<target name="maveninode" depends="-compile" description="Extract the dependency information from POM files." if="select.query">
		<db file="${maveninode.path}" sql="${sql}/maveninode.sql" />
		<java classname="ch.usi.inf.mavends.inode.Main" classpath="${build}:${sql}">
			<classpath refid="lib" />
			<arg value="--mavenindex=${mavenindex.path}" />
			<arg value="--repo=${repo}" />
			<arg value="--query=${select.query}" />
			<arg value="--maveninode=${maveninode.path}" />
		</java>
	</target>
	<target name="analysis-bytecodestats" depends="-compile" description="Runs Bytecode Stats analysis. Requires configuration." if="select.query">
		<analysis mavenvisitor="BytecodeStatsVisitor" />
	</target>
	<target name="analysis-sizestats" depends="-compile" description="Runs Size Stats analysis. Requires configuration." if="select.query">
		<analysis mavenvisitor="SizeStatsVisitor" />
	</target>
	<target name="analysis-unsafe" depends="-compile" description="Runs Unsafe analysis. Requires configuration." if="select.query">
		<analysis mavenvisitor="UnsafeVisitor" />
	</target>
	<target name="clean" description="Removes the compilation directory, e.g., *build*.">
		<delete dir="${build}" />
	</target>
</project>
